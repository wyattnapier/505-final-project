# -*- coding: utf-8 -*-
"""505ProjectEDA

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sVCw8woIaHRSHeHnrQDaGnexOruVQa3J
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import collections

# read in the data and save to dataframe
df = pd.read_json('combined_labeled_v2.json', lines=True)

print(df.columns, df.head())

# generate counts
emotion_counts = collections.defaultdict(int)
emotion_combo_counts = collections.defaultdict(int)
total_num_emotions = 0
total_samples = 0
for row in df['emotions']:
  emotion_combo_counts[tuple(sorted(row))] += 1
  total_samples += 1
  total_num_emotions += len(row)
  for e in row:
    emotion_counts[e] += 1

print(total_num_emotions / total_samples)

# print them in order
emotion_options = sorted(emotion_counts.items(), key=lambda x: x[1], reverse=True)
print(emotion_options) # hmm only has 4 emotions right now bruh

emotion_combo_options = sorted(emotion_combo_counts.items(), key=lambda x: x[1], reverse=True)
print(emotion_combo_options)

def make_pie_chart(data, title):
  labels = data.keys()
  values = data.values()
  plt.pie(values, labels=labels, autopct='%1.1f%%', startangle=90)
  plt.title(title)
  plt.show()

make_pie_chart(emotion_counts, 'Individual Emotion Proportions')
make_pie_chart(emotion_combo_counts, 'Proportions of All Emotion Combinations') # might make sense to just use top 10 or something

top_10_emotion_combos = emotion_combo_options[:10]
top_emotion_combo_counts = {combo: count for combo, count in top_10_emotion_combos}
make_pie_chart(top_emotion_combo_counts, 'Proportion of Top 10 Emotion Combination')